@use 'node_modules/@brightlayer-ui/colors/palette' as blui;
@use 'node_modules/@brightlayer-ui/colors-branding/palette' as branding;
@use 'node_modules/@angular/material' as mat;

@use 'node_modules/@brightlayer-ui/angular-themes/blui-component-theme';
@use 'node_modules/@brightlayer-ui/angular-themes/blueTheme';
@use 'node_modules/@brightlayer-ui/angular-themes/margins';
@use 'node_modules/@brightlayer-ui/angular-themes/fonts';
@use 'node_modules/@brightlayer-ui/angular-themes/common';

@use './typography' as appTypography;
@use 'src/app/pages/representatives/representatives.component' as representatives;

$greenPalette: (
    50: #eaf7e9,
    100: #c9ecc9,
    200: #a6dfa5,
    300: #82d281,
    400: #67c966,
    500: #4cbf4b,
    600: #45b944,
    700: #3cb13b,
    800: #33a933,
    900: #249b23,
    A100: #d9ffd9,
    A200: #a6ffa6,
    A400: #73ff73,
    A700: #59ff59,
    contrast: (
        50: #000000,
        100: #000000,
        200: #000000,
        300: #000000,
        400: #000000,
        500: #000000,
        600: #000000,
        700: #000000,
        800: #ffffff,
        900: #ffffff,
        A100: #000000,
        A200: #000000,
        A400: #000000,
        A700: #000000,
    ),
);

$material-theme-primary: mat.define-palette($greenPalette, 700);
$material-theme-accent: mat.define-palette(blui.$blui-yellow, 500);
$material-theme-warn: mat.define-palette(blui.$blui-red, 500);
$jungle-green-theme: map-merge(
    mat.define-light-theme($material-theme-primary, $material-theme-accent, $material-theme-warn),
    (
        foreground: (
            text: map-get(blui.$blui-black, 500),
            secondary-text: map-get(blui.$blui-gray, 500),
            hint-text: map-get(blui.$blui-black, 400),
            base: map-get(blui.$blui-darkBlack, 900),
            divider: rgba(66, 78, 84, 0.12),
            dividers: mat.get-color-from-palette(mat.$light-theme-foreground-palette, dividers),
            disabled: rgba(66, 78, 84, 0.3),
            disabled-button: rgba(black, 0.26),
            disabled-text: rgba(66, 78, 84, 0.3),
            elevation: map-get(blui.$blui-darkBlack, 900),
            icon: rgba(black, 0.54),
            icons: rgba(black, 0.54),
            slider-min: rgba(black, 0.87),
            slider-off: rgba(black, 0.26),
            slider-off-active: rgba(black, 0.38),
        ),
        background: (
            status-bar: mat.get-color-from-palette(mat.$light-theme-background-palette, status-bar),
            app-bar: map-get(blui.$blui-gray, 50),
            background: map-get(blui.$blui-white, 200),
            hover: rgba(black, 0.04),
            card: map-get(blui.$blui-white, 50),
            dialog: map-get(blui.$blui-white, 50),
            disabled-button: rgba(114, 126, 132, 0.12),
            raised-button: map-get(blui.$blui-white, 50),
            focused-button: mat.get-color-from-palette(mat.$light-theme-background-palette, focused-button),
            selected-button: map-get(blui.$blui-gray, 300),
            selected-disabled-button: map-get(blui.$blui-gray, 400),
            disabled-button-toggle: map-get(blui.$blui-gray, 200),
            unselected-chip: map-get(blui.$blui-gray, 300),
            disabled-list-option: map-get(blui.$blui-gray, 200),
        ),
    )
);

.jungle-green {
    @include mat.all-component-themes($jungle-green-theme);
    @include blui-component-theme.blui-components-theme($jungle-green-theme);
    @include blueTheme.bluetheme($jungle-green-theme);
    @include fonts.bodyfont();
    @include appTypography.typography();
    @include common.common();

    $theme-foreground: map-get($jungle-green-theme, foreground);
    $theme-background: map-get($jungle-green-theme, background);

    $primary: map-get($material-theme-primary, 700);
    $warn-red: map-get(blui.$blui-red, 500);
    $tag-opacity: 0.06;

    .desktop-search-input {
        border: solid 1px map-get($theme-foreground, divider);
    }

    .mat-tab-group {
        background-color: map-get(blui.$blui-white, 50);
    }
    .mat-toolbar.mat-primary {
        background-color: $primary;
    }

    $toolbarBgColor: $primary;
    /* Navigation */
    /*
    .blui-drawer .blui-drawer-nav-item-active-highlight {
        background-color: rgba($toolbarBgColor, 0.16) !important;
    }
    .blui-drawer-header .mat-toolbar {
        background-color: $toolbarBgColor !important;
    }
    .mat-toolbar.mat-primary,
    .navigation-app-bar {
        $color: map-get(blui.$blui-white, 50);
        background-color: $toolbarBgColor !important;
        color: $color;
        .blui-user-menu-avatar {
            color: $color;
            background: unset !important;
        }
        &.home {
            color: map-get($theme-foreground, text);
            background-color: map-get($theme-background, background) !important;
            .blui-user-menu-avatar {
                color: map-get($theme-foreground, text);
            }
        }
    }

    .navigation-search-bar {
        background-color: map-get($theme-background, card) !important;
        input {
            background-color: map-get($theme-background, card) !important;
        }
        mat-toolbar-row {
            border-bottom: solid 1px map-get($theme-foreground, divider);
        }
        mat-icon,
        input {
            color: map-get($theme-foreground, text) !important;
        }
    }

    $online-color: $primary;
    $offline-color: $warn-red;
    $rep-border-color: map-get($theme-foreground, divider);
    $table-address-color: map-get($theme-foreground, text);
    @mixin principalTag {
        $tag: map-get(blui.$blui-yellow, 900);
        border: solid 1px $tag;
        background-color: rgba($tag, $tag-opacity) !important;
        color: $tag !important;
    }
    @include representatives.representatives-theme(
            $online-color, $offline-color, $rep-border-color, $table-address-color, principalTag);

     */
}
